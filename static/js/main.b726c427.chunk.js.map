{"version":3,"sources":["api.ts","components/PersonInfo/PersonInfo.tsx","components/Loading/Loading.tsx","components/Error/Error.tsx","App.tsx","index.tsx"],"names":["cursor","size","delay","time","Promise","resolve","setTimeout","apiData","a","Math","random","Error","start","end","mockData","slice","PersonInfo","props","data","selectCard","deselectCard","style","display","height","justifyContent","flexDirection","padding","boxShadow","margin","background","className","onClick","id","firstNameLastName","jobTitle","emailAddress","Loading","error","color","App","useState","setData","selected","setSelected","isLoading","setLoading","setError","page","setPage","useEffect","result","FetchUsers","filter","item","length","map","personInfo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b726c427.chunk.js","sourcesContent":["import mockData from \"./data/mockData.json\";\n\nlet cursor = -1;\nconst size = 10;\n\nfunction delay(time: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(() => resolve(), time));\n}\n\nexport default async function apiData() {\n  await delay(1000);\n  if (Math.random() > 0.7) {\n    throw new Error(\"Something went wrong\");\n  }\n  cursor += 1;\n  const start = cursor * size;\n  const end = cursor * size + size;\n  return mockData.slice(start, end);\n}\n","import React from \"react\";\n\ntype Props = {\n  data: {\n    id: string;\n    firstNameLastName: string;\n    jobTitle: string;\n    emailAddress: string;\n  };\n  selectCard?: Function;\n  deselectCard?: Function;\n};\n\nfunction PersonInfo(props: Props) {\n  const { data, selectCard, deselectCard } = props;\n\n  const clickCard = (id:string) => {\n    if(selectCard) {\n      selectCard(id)\n    } \n    if(deselectCard) {\n      deselectCard(id)\n    } \n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"100px\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        padding: \"32px\",\n        boxShadow: \"0px 1px 2px 0px rgba(0, 0, 0, 0.15)\",\n        margin: \"10px 0\",\n        background: \"#fff\",\n        cursor: \"pointer\",\n      }}\n      className={`person-info ${deselectCard ? 'selected__item' : ''}`}\n      onClick={() => clickCard(data.id)}\n    >\n      <div className=\"firstNameLastName\">{data.firstNameLastName}</div>\n      <div className=\"jobTitle\">{data.jobTitle}</div>\n      <div className=\"emailAddress\">{data.emailAddress}</div>\n    </div>\n  );\n}\n\nexport default PersonInfo;\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <div style={{padding: \"32px\"}}>...Loading</div>\n  )\n}\n\nexport default Loading","import React, {FC} from 'react'\n\ninterface IError {\n  error: string;\n}\n\nconst Error:FC<IError> = ({error}) => {\n  return (\n    <div style={{padding: \"32px\", color: \"red\"}}><p>{error}</p></div>\n  )\n}\n\nexport default Error","import {useEffect, useState} from \"react\";\nimport apiData from \"./api\";\nimport PersonInfo from \"./components/PersonInfo/PersonInfo\";\nimport Loading from './components/Loading/Loading'\nimport Error from './components/Error/Error'\n\ninterface User {\n  \"id\": string;\n  \"jobTitle\": string;\n  \"emailAddress\": string;\n  \"firstNameLastName\": string;\n}\n\nfunction App() {\n  const [data, setData] = useState<User[]>([]);\n  const [selected, setSelected] = useState<User[]>([]);\n  const [isLoading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string>('');\n  const [page, setPage] = useState<number>(1);\n\n  useEffect(() => {\n    async function FetchUsers() {\n      try {\n        setLoading(true)\n        setError('')\n\n        const result = await apiData();\n        setData([...data, ...result]);\n\n        setLoading(false)\n      } catch (error) {\n        setLoading(false)\n        setError(`${error}`)\n      }\n    }\n    FetchUsers()\n  }, [page])\n\n  const fetchNextBatch = () => {\n    setPage(page + 1)\n  }\n  const selectCard = (id:string) => {\n    setSelected([...selected, ...data.filter(item => item.id === id)])\n    setData([...data.filter(item => item.id !== id)])\n  }\n  const deselectCard = (id:string) => {\n    setSelected([...selected.filter(item => item.id !== id)])\n    setData([...selected.filter(item => item.id === id), ...data])\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"selected\">Selected contacts: {selected.length}</div>\n      <div className=\"list\">\n      {selected.map((personInfo) => (\n          // @ts-ignore\n          <PersonInfo key={personInfo.id} data={personInfo} deselectCard={deselectCard}/>\n        ))}\n        {data.map((personInfo) => (\n          // @ts-ignore\n          <PersonInfo key={personInfo.id} data={personInfo} selectCard={selectCard}/>\n        ))}\n        {isLoading && <Loading/>}\n        {error && <Error error={error}/>}\n        <button onClick={() => fetchNextBatch()}> {error ? 'Refetch' : 'Load more' }</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {StrictMode} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}